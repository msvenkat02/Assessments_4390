# -*- coding: utf-8 -*-
"""LVADSUSR182_Anomalydetection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nSuFGzhBZaHtNP3yjq6DUB8BIkM02v9A
"""

#Solving this using ISOLATION FOREST'
import seaborn as sns
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.ensemble import IsolationForest
from sklearn.preprocessing import StandardScaler,LabelEncoder

df=pd.read_csv('/content/anomaly_train_fa.csv')

df.isna().sum()
#there seems to be no null values

# Creating a pairplot to represent for individual representation of columns
sns.pairplot(df, diag_kind='kde')
plt.show()

df['Location'].value_counts()

df.duplicated().sum()
#there are no duplicates in the file

df.info()

#Encoding for anamolies detection
le=LabelEncoder()
df['Type']=le.fit_transform(df['Type'])
df['Location']=le.fit_transform(df['Location'])

#Based on the remaining features except TransactionId we can perform anomaly detction since this has all unique values
X = df.drop('TransactionID', axis=1)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

#Using the isolation forest modelfinding the anomalies
model = IsolationForest(random_state=42, contamination=0.05)
model.fit(X_scaled)
outlier_preds = model.predict(X_scaled)

#Representing the anomalies on scatter plot
plt.figure(figsize=(8, 6))
plt.scatter(X_scaled[:, 0], X_scaled[:, 1], c=outlier_preds, marker='o', cmap=plt.cm.coolwarm)
plt.title('Isolation Forest Outlier Detection')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')
plt.grid(True)
plt.colorbar()
plt.show()

#Based on amount and Location
X = df.drop(['TransactionID','Type','Time','User'], axis=1)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
model = IsolationForest(random_state=42, contamination=0.05)
model.fit(X_scaled)
outlier_preds = model.predict(X_scaled)
plt.figure(figsize=(8, 6))
plt.scatter(X_scaled[:, 0], X_scaled[:, 1], c=outlier_preds, marker='o', cmap=plt.cm.coolwarm)
plt.title('Isolation Forest Outlier Detection')
plt.xlabel('Amount')
plt.ylabel('Location')
plt.grid(True)
plt.colorbar()
plt.show()

