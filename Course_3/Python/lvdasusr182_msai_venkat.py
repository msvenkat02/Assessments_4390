# -*- coding: utf-8 -*-
"""LVDASUSR182_Msai venkat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uqLECsl13Teva77bXLv13Aa3vixJyN80
"""

#Question-1
def input_length():
    prop=[]
    properties={}
    properties["length"]=float(input("Enter the length of land(in mts): "))
    properties["width"]=float(input("Enter the width of properties(in mts): "))
    prop.append(properties)
    return prop

def land_calc(prop):
    for i,properties in enumerate(prop,start=0):
      area=properties["length"]*properties["width"]
      if area<200:
        print("The area seems to be small")
      elif area>200 and area<1000:
        print("This is a medium sized land")
      else:
        print("This area is large")
    return area

prop=input_length()
area=land_calc(prop)
print("area of the land is: ",area,"mts^2")

#Question-2

def input_details():
    weight=float(input("Enter the weight of the user: "))
    height=float(input("Enter the height of the user: "))
    return weight,height

def bmi_calc(weight_c,height_c):
    BMI=((weight_c)/(height_c*height_c))*100
    if BMI > 0.1 and BMI < 0.3:
      print("The user is underweight recommended to follow a weight gain diet")
    elif BMI > 0.3 and BMI <0.6:
      print("The user is fit and just continue with the regular diet")
    else:
      print("The use is over weight and needs to control the food and follow perfect fitness diet")
    return BMI

weight,height=input_details()
BMI=bmi_calc(weight,height)
print("The persons Body Mass Index is: ",BMI)

#Question-3
def stud_details():
    students=[]
    no_stud=int(input("Enter the number of students: "))
    for i in range(no_stud):
      stud={}
      stud["name"]=input("Enter the name of the student: ")
      subjects=[]
      subs=int(input("Enter the number of subjects: "))
      for i in range(subs):
        stud["scores"]=int(input("Enter the scores: "))

#Question-4
kids_channels=["Cartoon network","Hungama","Disnep","Kushi"]
sports_channels=["Star sports","Espn","sony"]
news_channels=["CNN","BBC","TV9"]
Entertainement=["Maa","Star_movies","HBO","discovery","NAT_GEO"]
input_age=int(input("Enter your age: "))
if  input_age>8 and input_age<10:
  print("User comes into category of kids,Streaming kids channels",kids_channels)
elif input_age>10 and input_age<16:
  print("user comes into teenage ",Entertainement,kids_channels)
elif input_age>16 and input_age<26:
  print("Adulting",Entertainement,sports_channels)
else:
  print("Adult category",news_channels,Entertainement,sports_channels)

#Question-5
subscribers_ids=[3,10,43,24,66,54,32]
even_list=[]
for i in subscribers_ids:
  if i%2==0:
    even_list.append(i)
print(even_list)



#Question-6
user_names=[182,193,144,155]
pass_word="LVDASUSR182"
u_id=int(input("Enter the user  ID: "))
pwd=input("Enter the password: ")
if u_id in user_names and pass_word=="LVDASUSR182":
  print("The user is accessed")
else:
  print("The user is denied")

#Question-7
from itertools import count
#Question-7
def cus_feed():
    cus_scores=[5,3,8,4,9,10,4,7,8]
    sum_scores=sum(cus_scores)
    count=0
    for i in cus_scores:
      count +=1
    return count,sum_scores
def average_score(count,sum_scores):
    avg=sum_scores/count
    if avg>4 and avg<6:
      print("The services for these customers needs to be improvised")
    elif avg>6 and avg<8:
      print("The services for these customers is adjustable but can bring updates")
    else:
      print("services seems to be good")
    return avg


count,sum_scores=cus_feed()
avg=average_score(count,sum_scores)
print(avg)

#Question-8
def comments():
    comment_list=["awesome","ughh","Beautiful","aesthtic"]
    count=0
    for elements in comment_list:
      if elements[i]==["a"] or["e"] or ["i"] or ["o"]  or ["u"]:
        count+=1
      else:
        count=0
    return count
count=comments()
print(count)

def banking():
    principle=int(input("Enter the principle amount: "))
    rate=float(input("Enter the interest rate: "))
    period=int(input("Enter the time period: "))
    return principle,rate,period
def loan_calc(principle,rate,period):
    loan_amount=((principle*rate*period)/100)+principle
    return loan_amount
principle,rate,period=banking()
loan_amount=loan_calc(principle,rate,period)
print("Loan amount is: ",loan_amount)