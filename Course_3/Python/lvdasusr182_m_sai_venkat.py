# -*- coding: utf-8 -*-
"""LVDASUSR182_M Sai venkat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XnH7__-6ycRg8sTOa9k6a8wmYswYy9Ul
"""

#Question-1
import numpy as np
arr=np.array([1,2,3,4,5])
print("sum of elements is: ",arr.sum())
print("mean of the elements is: ",arr.mean())
print("standard deviation of the elements is: ",arr.std())
print("minimum element of the array: ",arr.min())
print("maximum element of the array is: ",arr.max())

#Question-2
#NA

#Question-3#
#marks out of 50
scores=[[40,36,45,44,36],[49,28,49,50,49]]
sco=np.array(scores)
print(sco[:,-1:-4:-1])
print("Therefore the average marks for last three subjects is: ",sco[:,:-4].mean())

#Question-4
#Using linspace this can be done
np.linspace(15,25,24)

#Question-5
import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
np.linspace(98,120,5)

#Q6
#NA

#Question-7
import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
sign, determinant = np.linalg.slogdet(properties_matrix)
print(determinant)

#Question-8
#NA
arr=np.array([[[1, 2, 3],[4, 5, 6]],[[4,5,6],[7, 8, 9]]])
bool
print(arr.ndim)

#Question-9
import pandas as pd
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
df=pd.DataFrame(data)
new_set=df[(df['Age'] < 45) & (df['Department'] != 'HR')]
new_set
#new_set[[df['Name'],df['City']]]

#Question-10
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
df=pd.DataFrame(data)
new_set=df.groupby(['Department'])['Sales'].agg([sum])
#Average is fount to be 50000
mod_set=df[(df['Sales']>50000)]
mod_set
#new_set
#new_set.mean()

#Question11
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
df=pd.DataFrame(data)
df
df.set_index(df['Price'],inplace=True)
pd.to_numeric(df['Price'])
#Average is found to 2.3
mod_set=df[(df['Category']=='Fruit')& (df['Promotion']==False) & (df['Price']>2.3)]
mod_set

#Question-12
employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}
df1=pd.DataFrame(employee_data)
df2=pd.DataFrame(project_data)
pd.merge(df1,df2,how='outer',on='Employee')

#Question-13,Question-14,Question-15-NA
df=pd.read_csv(/content/Q13_sports_team_stats.csv)